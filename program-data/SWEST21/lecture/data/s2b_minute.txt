**********************************************************************
セッションS2b 講演・チュートリアル
テーマ：「ESS2019企画セッション」湯河原宣言2018の紹介と拡充
　　　　　　 〜 我々は何を解決するべきか
講師：田中 清史(北陸先端科学技術大学院大学)
日時：2019/9/6(金) 9:00〜10:10
参加人数：20名（開始時）
**********************************************************************

・アジェンダ
○湯河原宣言について
○「利用時情報のフィードバック」についての議論
○「変化予測」についての議論
○まとめ

湯河原宣言2018の紹介
日々進化する現在、組込み開発における課題は山積みしており、
デジタルトランスフォーメーションの重要性が叫ばれている。
そうした中、湯河原宣言では、組込み産業の競争力強化を目指し、組込み開発の革新に
取り組む。


デジタルトランスフォーメーションとは：
ITの浸透が人々の生活をあらゆる面でより良い方向に変化させるという概念。
ビジネスの場面では、企業がテクノロジーを利用して事業の拡大や対象範囲を根底から
変化させるという意味でも使われる。


湯河原宣言の内容を大きく５つに分けることが出来る。

１．先端デジタル技術を活用して設計生産性を10倍に。
・自然言語処理技術を利用したモデリング支援
・開発プロセスの自動化の推進とライブラリ化
・質の高いコア資産の拡充
・"人"が実施することの明確化とアシスト
・非機能要件のモデリングとモジュール化
・形式手法による信頼性確保



２．利用時のフィードバックによるプロダクトのアップデートで価値を２倍に。
・ユーザ行動や事故・ヒヤリハット情報の自動収集
・利用時情報の解析、モデリング
・エンドユーザプログラミング
・アップデートする余裕のあるハードウェア


３．サービスの変化にこたえられるIoTプラットフォームによりビジネスを変革。
・サービスの変化に適用可能な進化型プラットフォームとは何か
・変化予測とオペレーションテクノロジ
・ディペンダブルな進化プロセス
・進化する電子デバイス

４．社会実装と新規ビジネスの創出

５．国際標準化

湯河原宣言2018は情報処理学会(SIGEMBのWEBサイト)などで公開されている。



本セッションの議論テーマとして、
湯河原宣言2018でも掲げられている以下のテーマについて議論を行う。
・利用時情報のフィードバック
・変化予測


＜議論１：利用時情報のフィードバック＞

利用時情報の利用を考えるというのは組込みの分野で重要なテーマとなっている。

・自動車ディーラーの紹介
利用時情報の例として、自動車ディーラーでの情報収集(クラッシュレポートなど)などがあげられる。
日本は特に自動車ディーラーのネットワークは優れており、
車の使い方などをフィードバックして品質向上に使わるなどといった例がある。

・自動運転の開発の流れ(Pegasasu 2017)を示した図の紹介
例えば、フィールドで自動運転を行っているときの結果やエンドユーザの使っている
情報を利用し、V字プロセスの各所に適応していくという例が紹介された。
いろいろなところから得られる情報を利用するというのは、組込みシステムなどにも
応用できる。

・ソフトウェアにおける利用時情報利用の紹介
ソフトウェアにおける、利用時情報の利用の例としては、
クラッシュレポートの活用で、技術改良をするという例が紹介された。

・利用時の事故情報やヒヤリハットの自動収集
機械学習系の技術で、利用者が知られたくない情報、プライバシー情報などを、
AIが機械学習し、守りたいデータは保護するような機能などが考えられる。
これに関連してFederated Learningを検討する。

＜議論＞
研究者として色々やれることがあるが、何をやれば世界やコミュニティに貢献できるかと
いうこと、また利用時情報の活用でこうやったらいいなというアイデアについて議論を行う。


質問：利用時情報を集めてどう使うかというイメージがつかない。例えば、ソフトウェアの
　　　品質を保つために使うのか？

解答：色々あると思うが、品質を改善するという観点でいえば、
　　　設計方法のメトリクスがとれたら、そういうのもフィードバックしたり、
　　　何を作るべきかというのを利用時情報のメトリクスでやれたりするのではないか。
　　　利用時情報のメトリクスを使って、改善などを行うようなものが考えられる。


意見：物理世界とつながったITシステムというのは、今の組込みのことを指していると
　　　思う。その強みを考えるべきだと思う。
　　　物理システムにつながったITシステムの強みを考え、そこを中心にシステムを
　　　拡張していくということが必要だと思う。


意見：デバイスを利用しているときの振動など、今まで観測していなかったデータを
　　　観測したり集めてなかった情報を集めて、何か新しい判断につなげるみたいな
　　　ことができたらいいと思う。
　　　物理的な利用時情報を集める際の、組込み特有の攻め方なども考える必要があり、
　　　そのモデル化なども重要である。

意見：クラウドという話になると、日本の競争力が低いように感じてしまう。
　　　エッジ側で頑張るのが有力である。
　　　IoTやデジタルツインを上手く活用できるようになりたいが、それを組込み分野の
　　　範疇としてどうやるか考える、組込みの分野でできるのか、できることがないか
　　　考えていくことが重要だと思う。


質問：利用者の情報を集め、解析してデータそのものを使おうとしていると思うが、
　　　データを集める時のコストはどうなっているのか？

解答：コストをかけないようなデータの集めかたも考えていかないといけない。
　　　コストと多様性のトレードオフの話はいっぱいあって、想定していた範囲だと
　　　多いので、クラウドで集めるという研究もされている。
　　　また、想定される5年、10年先のことを計画することを考えるようなソフトウェアが
　　　あったりする。
　　　組込み分野に限らず、人間側の価値につながるものに拡張していくことは重要である。


質問：利用時情報の利用として、例えば人間が使っているデバイスから何を集めるか
　　　ということを想定しないといけないが、後から、別のデータが必要となり、それを
　　　集めるという話になったら難しいのか？また、それを機械でやるのは難しいのか？

解答：機械で行うのは難しいように感じる。世の中が変化するにつれて必要な情報も
　　　変わってくるし、それを考えていかなければいけないし、同時に、そういった情報を
　　　どうするかということも考えないといけない。
　　　組込みじゃないところからも集めることも必要になってくると思う。


意見：組込みの範疇で考えると、人間がパソコンに入力する情報をクラウドで集めると
　　　いうのは今でもできているように感じる。実際にものが動いているときの、情報を
　　　フィードバックするようなことが必要。
　　　そういったことを組込みの分野の延長で考えられるのではないか。
　　　例えば、センサーからの情報をどう扱うか、こういったことを考えたりすれば
　　　いいのではないか。


意見：想定しているものと想定していないデータ、利用時情報を使っていく上では想定
　　　していないデータをどうとるか、こういった情報をフィードバックすることが重要。
　　　想定しているデータのみだとあまり意味がない気がする。
　　　機器本来の目的以外の情報を集めることが必要に感じる。


＜議論２：変化予測＞


組込みシステムは閉じた環境から開いた環境になりつつある。
想定された範囲内でデバイスをつなぐようなサービスから、想定外の環境への適合を
考えていく方向に変わってきている。
以下を考えることが必要である。

・様々なノードを組み合わせた新たなサービスを実現
・想像しなかった使われ方
・runtime verificationのようなテクノロジ：実行時に想定している範囲の使われ方が
　されているか常にチェックして、違反していない場合は止める、ないしは別のことを
　実行するようなテクノロジ。



意見：物理世界を取り扱う以上、物理世界をどの程度モデル化しておく必要性があるか、
　　　上手く対応できるのかということを考えることが重要である。


意見：利用する情報が変わったらそれに応じて、ただ変えればいいんじゃないかという
　　　考え方。例えば、テストの工程などでも変化に応じて、それに応じたメンテナンス、
　　　テストなどを行っていくのが必要。
　　　テストを行った結果、この改良はこうなったなど、少なくともリグレッションはできる


意見：変化しても品質を保つことが必要となる。テストは定期的に行うことが必要で、
　　　同時にメンテナンスすることも重要である。
　　　もちろんそうした中で、テストだけでなく形式検証も必要になる。


意見：テストの話も難しいが、実際のマシンに対して実装する部分も難しかった。
　　　モデル、シミュレータとを動かすのは割と難しくないことだが、実機で動かす
　　　ということになると難しい。


質問：実装で難しい点などはあったか。

解答：ソースコードのチェックや仮想環境での検証はできたが、実際のマシンに組みこむ
　　ということがとても難しかった。
　　実機に組み込むという話になるとハードルは一気に上がるように感じる。






意見：医療機器をやっている方の意見
　　　変化予測の話で、できている例：医療の画像診断。
　　　操作ログをとる仕組み、ユーザがスキャンした診断画像、その結果がある。
　　　患者の操作ログ通りに診断の再現を行うことができ、再現ができるので検証ができる。
　　　また継続的なインテグレーションが可能である。

変化予測の話における課題：生体をスキャンした画像が本当に正しいものなのか判断
できない。患者さんが目の前でやっていることを試せるわけではない。実際の現場に
いないので、正しい情報なのかを確認できない。




意見：ノードサービスにおいて、この変化がどこで起こるのか、どの現場で起こるのか
　　　ということを知ることが必要。ノードの変化がどこで起こるのかというのは、
　　　どちらかというとエンドユーザ側だと思う。
　　　エンドユーザ側でできる対応を考えていかなければいけない。そういったことも
　　　含めて、湯河原宣言で考えていかなければいけない。



以上
