********************************************************************************
セッションs5a
テーマ:Kaspersky OS の概要とできることできないこと
講師：松岡正人（株式会社カスペルスキー）
日時：2017/8/25 14:30-15:40
参加人数：約20名
********************************************************************************
(議事録本文)

カスペルスキーを知っている人>8人

カスペルスキー: 人の名前
ロシアの企業

IoTデバイスは爆発的に増えづける．
セキュリティの問題はどうするか．
＞対策する部分に応じて方法が変わる．
＞今後の話もあれば，すでにあるものに対しての話もある．

現在，確立されたセキュリティに関するデファクトスタンダード的なものはなく，
各ベンダーがそれぞれ提案していっている状態．

限られたリソースの中で，どんな機能を実装していくかが重要．

セキュリティの方法
①通信を監視するしくみ
②セキュアOS

脆弱性を悪用されることを防ぐために，
定義されていない機能を実行することのできない環境を用意する．

組込みシステム（OS）の主な要件
要件①:少ないリソース
要件②:攻撃下（ネットワーク越し）でも安定動作
要件③:セキュリティは組込み済み
要件④:業界標準準拠

アイディア①:マイクロカーネル
アイディア②:分離したサブシステム

FLASKを使う
＞あらかじめバイナリーでポリシーを埋め込むことができるため，
ユーザが容易に変更できない．
ポリシーに準拠されているときのみ呼び出し可能．

＞APIレベルでポリシー設定できる


KASPERSKY OS
検証用ツールも提供している

40人くらいでオーダーメイドでやっているので，
一般にはなかなか提供できない．

特徴
・コードの実行をポリシーで管理
・柔軟にポリシーを管理
・基盤なのでハッキングしづらい

KSSの例:乗り物系（車じゃない）のECU　（OSはパイクOS）


KASOERSKY OS > 手間がかかるのでおすすめしない
KSS > つかっているOSに合わせて利用できるので手軽

長所
・基本拒否の規則
＞自分たちで使っていもいいことを許可していくスタイル

・柔軟性
＞通信をする粒度に合わせてドメインごとにポリシー設定可能

・検証可能なセキュリティ
＞ツールを提供済（なんでこのリクエストがリジェクトされたかのログがとれる．）


WINDOWS アクティブディレクトリのポリシ設定と似ている

・簡単にインストールできない仕組み


短所（一般）
・POSIXとの完全互換性なし
・リソースへのアクセス問題
・性能の問題

短所（分離したセキュリティサブシステム）
・適切なセキュリティポリシの選択の問題
・がちがちの構成によって動かないものができあがる
・セキュリティ判定キャッシュの問題

短所（疎結合アーキテクチャ）
・同期に気を付ける必要あり
作る側はポリシに対するしっかりとした理解が必要


用意されていない機能もあるので，
それらは保証されていないと考えて利用する必要あり．


アーキテクチャの特徴まとめ
・ドメイン分離に基づいたアーキテクチャ
・分離したセキュリティサブシステム
・高度なセキュリティシステム



アプリのプロセスに対しゲートが対になって生成されるようになっている．
アプリがカーネルの機能を使っていいのかはカーネル側のゲートの許可を得る必要あり．

InterfaceDefinitionLangage:制御の指定をするコンフィギュレーションファイル


判定キャッシュ:セキュリティサーバで判定が出たもの関してはキャッシュに残る．
判定に要する処理時間もあるので，キャッシュに残すデータも大事．


ポリシーを設定し，通信に制限することによって，攻撃される相手を減らすことができる．


アプリ側
NDLSで登録すると，IDL/CDL/EDLの書き方，トレーニングが受けられる(2週間くらい)．

サーバ側
CFGでポリシを書く




質問①トラストゾーンと何が違うのか．（できること，できないこと）
＞できることは近いかもしれない．
＞OSのAPI単位でポリシ設定できる．



■まとめ
・カスペルスキOSはOSとして使うことは少なく，セキュリティサブシステムとして既存の組込みOSと組み合わせて使うことが考えられる．
・あくまで，アプリケーションの制御のみを取り扱い，それ以外（起動システムの完全性，メモリに対するアクセスの制御）はユーザ側で環境を整備する必要がある．


以上

