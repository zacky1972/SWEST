**********************************************************************
セッションs5b
テーマ：人を見守る共生型ロボットネットワークシステムの開発と展開
講師：吉海智晃（株式会社キビテク）
日時：2017/8/25 14:30-15:40
参加人数：28名（終了時）
**********************************************************************
（議事録本文）
目次
1. 会社紹介
2. 人を見守る共生型ロボットネットワークシステムの概要
3. 共生型ロボットネットワークシステムを構築する技術基盤
4. プロトタイプ紹介
5. デモンストレーション

1．会社紹介
株式会社キビテク（2011年設立）
目標
* 道具の代替ではない、心の機微に触れる技術を作る
* 関わる開発者が、発信力を持ち、生き生きと創造に携われる場を社会に提供する
強み
* 幅広い技術の必要なロボット工学を背景とした技術領域での迅速な開発
* 研究開発の必要な開発


2．人を見守る共生型ロボットネットワークシステムの概要
人を見守る共生型ロボットネワークシステムとは
* ロボットの機能要素を環境に分散配置することで、環境そのものをロボット化し、その中で生活する人々を見守り、サービスを提供するシステムのこと
* 親機ロボットから子機ロボットへの通信
サービス・ニーズ
* 高齢者／子供／ペットの見守りと遠隔操作による生活支援
* 賃貸物件遠隔制御型内見サービス
* 郊外にある別荘の警備・内環境の管理
* 夜間等の家宅侵入者の検出と警報
* 工場内で、離れている地点の機器の操作や監視
* 外出中や在室中での家電機器の一元管理

3．共生型ロボットネットワークシステムを構築する技術基盤
ソフトウェア基盤：ROS
ROSとは知能ロボット研究分野で利用されている分散ソフトウェアモジュールのミドルウェア
* オープンソース（OSRFが管理）
* C++, Pythonを中心として多言語に対応

ROSの技術概要
* 分散モジュールの単位は「ノード」と呼ばれ、トピックやサービスを使ってノード間通信を行う
トピック：連続データの伝達に主眼が置かれたインタフェース
サービス：単発処理の実行に主眼が置かれたインタフェース

ROSを使うメリット
* 多くのパッケージが存在
> SLAM, 2D Navigation, モーションプランニング
* 各種データ処理のライブラリとの親和性
> OpenCV, PCL
* データの可視化機能
> RViz，rqt
* 座標変換をtfと呼ばれるライブラリでサポート
* 全世界にユーザがいて、コミュニティが活発
> 2016年の.debファイルの総ダウンロード数は113,345
> 論文発表と紐づいたものも多く、アルゴリズムとコードの両側を確認できることが多い

ROSの最近の動向
* Ubuntu LTSに合わせたROSのリリースとサポート期間の設定
> Kinetic Kameは2021年までのサポート
* ROS2の開発
> 複数ロボットにおける応用、組込みシステム、リアルタイム制御、といった従来のROSでカバーできていなかった領域への対応
* DDSによる通信
* ROSとの互換性はない
* 2017年8月にベータ2、2017年12月に1.0をリリース予定

ハードウェア基盤：ROSBlock
ROSをハードウェアモジュールとして実現するためのハードウェアプラットフォーム
	roscoreや機器に依存しない分散処理

ROSBlockのメリット
* ROSという大きな知能ロボット開発フレームワークとインタフェースが揃っているため、公開されている様々な知能処理を利用した高度な機能分散アプリケーションを柔軟に構築できる
* 各ソフトウェアモジュール（ノード）を物理的に組み込みデバイスとして実現することで、環境に分散された個々のデバイスが個別にROSのネットワークに繋がる
* ROSの開発フレームワークを利用した挙動の監視・テスト・デバッグが容易になる

ROSBlock PLCブリッジ
* ペアメタルマイコンボード
* TCP/IPによるroscoreと通信機能
* ROSトピック、PLC通信プロトコル間の信号変換処理

PLCの想定利用シーン
* 生産工場の装置
* 産業系設備の制御用装置
* ビル設備系装置
* 都市設備系装置
* 電化製品やアミューズメント装置


4．プロトタイプ紹介
* Version1
> 分散センサ／アクチュエータモジュールの試作とクラウドサービスまで繋げた全体システムの機能検証が目的
> H27年度補正予算ものづくり補助金に採択される
特徴
* 室内分散モジュール間の通信にLoRaを採用
* LoRa/ROS通信変換モジュール
問題点
* 長時間実験時にrescoreモジュールのバッテリが落ちる
* でも時にネットワーク環境の違いによるトラブルが頻発
* 新規ロボットの性能不足（バッテリ、トルクなど）
* 室内で多ノードで分散を実現しようとした時、Loraの使い勝手がよくない。
→これらの問題点の改良版であるVersion2を開発
* Version2
> ハードウェアモジュールのブラッシュアップ
> PC上で動作するROSシステムとの連携の検証


質疑応答
Q：LoRaを選んだ理由は？
A： 広いデータに対して1つで対応可能。

Q：LoRaにおいて使っているレベルは？
A： 通信速度はかなり遅い。プロトタイプ環境においては100bps以下の低速通信で、テキストデータを送る程度のレベルで利用。

Q：PLCがターゲット？
A： PLCはあくまでもブロックの一つ。産業で応用しやすい。

Q：ROSマスタにアクセスできない場合の信頼性は？
A：本当に信頼性が必要な部分は規格に従ったものを使う。そうでない部分をROSで処理。

Q：ROSCOREをROSブロックで提供する場合、ROSCOREを見つける方法は？
A：名前解決させる予定。技術的にはDNS等を用いる。組込むのが今後の技術的課題。


■まとめ

「共生型ロボットネットワークシステム」プロジェクト
* ロボットの機能要素を環境に分散配置して、環境そのものをロボット化することを基本コンセプトとしたロボットシステム
* 見守り、危機管理、製造現場応用など幅広いアプリケーションを想定

環境分散ロボットシステムのための技術基盤
* ROS
> 世界的に利用されている知能ロボットの開発フレームワーク
* ROSBlock
> ROSの機能モジュールをハードウェア的に実現し、通常のROSネットワーク内で混在させることで知能ロボットの環境分散化を実現する

プロトタイプ作成、検証
* １ｓｔプロトタイプ
> ものづくり補助金で助成を受け、機能検証
* 2ndプロトタイプ
> 前バージョンを改良、現在、試作・検証中

