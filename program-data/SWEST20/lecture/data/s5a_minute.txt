**********************************************************************
セッションs5a
テーマ：70分で理解するAUTOSAR Adaptive Platformのポイント
講師: 松原 豊, 伊藤 剛
日時：8/31(金) 13:00-14:10
参加人数：約50人
**********************************************************************


AUTOSARの概要について


□Adaptive Platform(AP)
・ADASや自動運転など、高機能・高性能、高い安全性が求められる
 次世代ECU向けとして開発


・特徴
        ・C++言語の採用
        ・SOAの採用
        ・並列処理への対応
        ・既存スタンダードの採用（既存のオープンスタンダードの再利用）
        ・安全とセキュリティのサポート
        ・計画的な変動をサポート(plan dynamics, 反復サイクルを可能にするために、
                リソースと通信が動的に管理されるアプリケーション)
        ・アジャイル開発を想定


・リリース状況: 2017.3に最初、2018.3が最新、仕様書は一般公開。
        デモンストレータは会員向けに公開


・開発体制機能単位で開発（性能と機能で大きく分類できる）
・AP仕様書は膨大だが、一部について紹介


        ・APとCPの共通仕様は、Foundationとして規定。SORE/IPも規定されている
        ・CPは2003年開発開始、成熟しており、実用段階。
        ・APは一部のソフトウェアベンダが開発。
                開発初期ー中期
        ・CPはC, APはC/C++
        ・CP: OSEK, AP: POSIX PSE51準拠
        ・実行ROM, ROM->RAM
        ・メモリもアプリごとに仮想アドレス
        ・CPシグナルベース(CAN, LIN)に最適化。APサービス指向(Ether)
        ・StbMによる時刻同期
        ・CPに比べるとAPのがゆるい機能安全の仕様
        ・セキュリティCSMサポート、APはDDSなどの標準をサポートしようとしている


□APの構造
        ・Serviceとfoundationで分類されている。それぞれに属する機能ごとにブロック
         分けされ機能クラスタ(FC)が存在
        ・AUTOSAR (ARA)


□各機能クラスタの役割
        ・Communication Management(CM): アプリケーション間の通信
        ・RESTful Communication


        ・Platform Health aManagement: プラットフォームの状態監視
        ・Core Types：複数のFCで使用するパブリックインタフェース
        ・Execution Management: プロセスの起動/停止の管理
        ・Identity Access Management: 
                外部攻撃に対し、各FCのインタフェースを用いたアクセスを制限
        ・Operating System
        ・Logging & Tradcing: デバグ情報を外部デバイスに送信
        ・Cryptography: 一般的な暗号化に対応
        ・State Management
        ・Diagnostics
        ・Signal to Service mapping
        ・network management


        Update and Configuration Management: 
                APの目標の一つである無線ネットワークを用いたアップデート機能


        <- 仕様は公開されているのでそれを見てください！！


□OSの条件
        ・POSIX
        ・初期化プロセスでEMを動かすこと
        ・マルチスレッドのサポート
        EMは起動時に初期化以外もある
        ・各プロセスの起動
        ・各プロセスの状態を意識し、動かし方を決める
        ・Manifestを用いて、プロセスを管理
        ・状態管理（大きい状態->小さい状態の順に, SMが管理）
                ・マシン状態
                ・機能グループ状態
                ・プロセス状態
                ・アプリケーション状態
                
□CM
        アプリケーション間の通信はCMを通じて行われる。
        "ara"というAPIで接続。ECP間はetherで接続
        言語バインディング


        SOA: アプリケーション、機能の一部サービスとしてコンポーネント化


        言語バインディング: アプリケーションにサービスを提供/利用するための標準的な
                インタフェースを提供


        ネットワークバインディング: 
                サービスのデータをネットワーク上でどのように転送するかを定義


        SOME/IP(Scalable service Oriented Middleware on Ethernet/IP) サービス指向の通信
        DDS(Data Distributed system) データ中心の通信


        E2E保護


□デモンストレータの説明
・AUTOSARで作りこまれたアプリケーション。
 テストで使用するためのアプリケーションが含まれている
・APでHello worldを動かすためは、アプリとmanifestを作って、レシピに追加。


□実行環境
・yoctoを用いて実行ファイルを作成しているので、
 yoctoをサポートしていれば使える。
 → yoctoとはオープンソースのコラボレーションプロジェクトで、開発者がハード
        ウェアアーキテクチャに関係なく、組み込み製品用のカスタムLinuxベースの
        システムを作成するのに役立つ




□質疑応答
        質: calassicとAPとの接続の規格
        > SOME/IPは使える。シグナルベースなのでメソッドは使えない


        質: ECUの種類によってAPの中でいらない機能とかはclassicと同じように抜いて
         使えるか
        > 使えます


        質: DDSの中のQoSを使ったりするときに、他の部分のQoSで変更点があるか
        > DDSのQoSに準拠する。
         将来的にはara:comのmanifestにQoSが設定可能になり、使われる可能性はある。
         当初はSOME/IPが前提だったため。




■まとめ
 APについて詳細に説明がされた。
 主に、OS, EM, CMについて、仕様を示しながらCPとの違いが述べられた。
 質疑においては、
 従来のCPとの接続するためのプロトコルは、APの通信についての質疑が行われた。




以上。
